#include "main.h"
/**
* _sqrt_recursion - gives sqrt
* @n: variable test
* Return: sqrt value
* sqrt_newton_recursive_helper - function helper
*/
int _sqrt_recursion(int n)
{
	if (n == 0)
	{
		return (0);
	}
	else if (n == 1)
	{
		return (1);
	}
	else if (n < 0)
	{
		return (-1);
	}
	else
	{
		return (sqrt_newton_recursive_helper(x, x));
	}
}
 /**
 * sqrt_newton_recursive_helper - calculates newtons rec
 * @x - base test
 * @root - for recursives
 * Return: sqrt root
 */
int sqrt_newton_recursive_helper(int x, int root)
{
	if (root * root <= x && (root + 1) * (root + 1) > x)
	{
		return (root);
	}
	else
	{
		root = (root + x / root) / 2;
		return (sqrt_root_recursive_helper(x, root));
	}
}
